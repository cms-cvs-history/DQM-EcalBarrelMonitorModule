<soap-env:Envelope
 soap-env:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/">
<soap-env:Header>
</soap-env:Header>
<soap-env:Body>
<xdaq:Configure xmlns:xdaq="urn:xdaq-soap:3.0">
<xc:Partition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xc="http://xdaq.web.cern.ch/xdaq/xsd/2004/XMLConfiguration-30">

<xc:Context url="http://.host:.portn">
	<xc:Application class="Executive" id="0" network="local" resident="true">
		<properties xmlns="urn:xdaq-application:Executive" xsi:type="soapenc:Struct">
                      <logLevel xsi:type="xsd:string">INFO</logLevel>
                </properties>
	</xc:Application>

        <xc:Application class="evf::FUEventProcessor" id="21" instance="0" network="local">
           <properties xmlns="urn:xdaq-application:FUEventProcessor" xsi:type="soapenc:Struct">

                    <parameterSet xsi:type="xsd:string">
			process MONITOR = {

			     module ecalEBunpacker = EcalDCCUnpackingModule{ }

			     module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer{
			       string digiProducer   = "ecalEBunpacker"
			       string digiCollection = ""
			       string hitCollection  = "EcalUncalibRecHits"
			       untracked int32 nMaxPrintout = 1
			     }

			     module ecalRecHitMaker = EcalRecHitProducer{
			       string uncalibRecHitProducer = "ecalUncalibHitMaker"
			       string uncalibRecHitCollection = "EcalUncalibRecHits"
			       string rechitCollection = "EcalRecHits"
			       untracked int32 nMaxPrintout = 0
			     }

			     module ecalMonitorModule = EcalBarrelMonitorModule{
			       untracked bool enableMonitorDaemon = true
			       untracked bool verbose = true
			       untracked string runType = "cosmic"
			       untracked int32 runNumber = 000006100
			     }

			     module ecalIntegrityTask = EBIntegrityTask{ }
			     module ecalCosmicTask = EBCosmicTask{ }
			     module ecalBeamTask = EBBeamTask{ }
			     module ecalLaserTask = EBLaserTask{ }
			     module ecalPedestalOnlineTask = EBPedestalOnlineTask{ }
			     module ecalPedestalTask = EBPedestalTask{ } 
			     module ecalTestPulseTask = EBTestPulseTask{ }

			     path p = { ecalEBunpacker,
			                ecalUncalibHitMaker, ecalRecHitMaker,
			                ecalMonitorModule,
			                ecalIntegrityTask,
			                ecalCosmicTask, ecalBeamTask,
			                ecalLaserTask,
			                ecalPedestalOnlineTask, ecalPedestalTask,
			                ecalTestPulseTask
			     }

			     source = DAQEcalTBInputService{
			       untracked int32 maxEvents = 150
			       untracked vstring fileNames = { "/tmp/H4-000006100-SM5-COSMIC-STD" }
			       untracked bool isBinary = false
			     }

			     es_source = EcalTrivialConditionRetriever{ }

			     service = MessageLogger{
			       vstring destinations = { "cout" }
			       vstring categories = { "EcalTBInputService",
			                             "EcalBarrelMonitor"
			                            }
			       PSet cout = { string threshold = "INFO"
			                     PSet default = { int32 limit = 0 }
			                     PSet EcalTBInputService = { int32 limit = 0 }
			                     PSet EcalBarrelMonitor = { int32 limit = 10 }
			                     bool noTimeStamps = true
			                     bool noLineBreaks = true
			                   }
			     }

			     service = DaqMonitorROOTBackEnd{ }

			     service = MonitorDaemon{
			       untracked bool AutoInstantiate = true
			       untracked int32 reconnect_delay = 5
			       untracked string DestinationAddress = ".host"
			       untracked int32 SendPort = 9090
			       untracked int32 UpdateDelay = 500
			       untracked string NameAsSource = "FU0"
			     }

			}
                    </parameterSet>

                  </properties>

                </xc:Application>
		<xc:Module>.libpath</xc:Module>
        </xc:Context>
</xc:Partition>
</xdaq:Configure>
</soap-env:Body>
</soap-env:Envelope>
