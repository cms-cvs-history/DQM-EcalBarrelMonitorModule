process ECALDQM = { 

     module ecalEBunpacker = EcalDCCUnpackingModule{ }

     module ecalUncalibHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"
#     module ecalUncalibHit = ecalWeightUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalWeightUncalibRecHit.cfi"

     replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:
     replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:

include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"

     replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
     replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE

include "DQM/EcalBarrelMonitorModule/data/EcalBarrelMonitorModule.cfi"

include "DQM/EcalBarrelMonitorTasks/data/EcalBarrelMonitorTasks.cfi"

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     module eventSource = EventCoordinatesSource{
       untracked bool enableMonitorDaemon = false
     }

     sequence ecalBarrelDataSequence = { preScaler,
                                         eventSource,
                                         ecalEBunpacker,
                                         ecalUncalibHit,
                                         ecalRecHit }

     sequence ecalBarrelMonitorSequence = { ecalBarrelMonitorModule }

     path p = { ecalBarrelDataSequence, ecalBarrelMonitorSequence }

     endpath q = { ecalBarrelCosmicTasksSequence }

     source = EventStreamHttpReader{
       untracked int32 maxEvents = -1
       string sourceURL = "http://localhost.localdomain:40002/urn:xdaq-application:service=storagemanager"
       int32 max_event_size = 7000000
       int32 max_queue_depth = 5
       untracked string consumerName = "DQM Source"
       untracked string consumerPriority = "normal"
       untracked int32 headerRetryInterval = 3
       untracked double maxEventRequestRate = 2.5
       untracked PSet SelectEvents = { vstring SelectEvents={"p2"} }
       //untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
     }

     es_source = EcalTrivialConditionRetriever{
       untracked double adcToGeVEBConstant = 0.00875
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
                                          0.000,  1.320, -0.050,
                                         -0.500, -0.500, -0.400,  0.000 }
     }

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi",
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiGainSwitch",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalBarrelMonitor"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                       = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService            = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi               = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType    = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize      = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId           = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainSwitch     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize   = { untracked int32 limit = 1000 }
         untracked PSet EcalBarrelMonitor             = { untracked int32 limit = 0 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

#     service = DQMShipMonitoring{
#       untracked uint32 period = 5
#     }

include "DQMServices/Daemon/test/data/dqm_monitorDaemon.cfi"

     replace MonitorDaemon.UpdateDelay = 500
     replace MonitorDaemon.maxAttempts2Reconnect = 99999

}
