
process ECALDQM = { 

     module ecalEBunpacker = EcalDCCUnpackingModule{ }

     module tdcReco = EcalTBTDCRecInfoProducer{
       string rawInfoProducer   = "ecalEBunpacker"
       string rawInfoCollection = ""
       string eventHeaderProducer   = "ecalEBunpacker"
       string eventHeaderCollection = ""
       string recInfoCollection  = "EcalTBTDCRecInfo"
       untracked bool use2004OffsetConvention = false
       int32 fitMethod = 0
       VPSet tdcRanges= {
         {
           int32 startRun = 10339
           int32 endRun = 14441
           vdouble tdcMin = { 748. ,  400,  400,  400,  400 }
           vdouble tdcMax = { 1008. ,  927,  927,  927,  927 }
         },
         {
           int32 startRun = 14442
           int32 endRun = 999999
          vdouble tdcMin = { 1502. ,  400.,  400.,  400.,  400. }
           vdouble tdcMax = { 1764. ,  927.,  927.,  927.,  927. }
         }
       }
     }

     module hodoscopeReco = EcalTBHodoscopeRecInfoProducer{
       string rawInfoProducer   = "ecalEBunpacker"
       string rawInfoCollection = ""
       string recInfoCollection  = "EcalTBHodoscopeRecInfo"
       int32 fitMethod = 0
       vdouble planeShift = { 0.0, 0.0, 0.4633, 0.1000 }
       vdouble zPosition = { -3251.0, -2881.0, -751.0, -381.0 }
     }

     module ecalUncalibHitMaker = EcalFixedAlphaBetaFitUncalibRecHitProducer{
       InputTag EBdigiCollection = ecalEBunpacker:
       InputTag EEdigiCollection = ecalEBunpacker:
       string EBhitCollection  = "EcalUncalibRecHitsEB"
       string EEhitCollection  = ""
       untracked int32 nMaxPrintout = 0
     }

     module ecalRecHitMaker = EcalRecHitProducer{
       InputTag EBuncalibRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
       InputTag EEuncalibRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEE
       string EBrechitCollection = "EcalRecHitsEB" 
       string EErechitCollection = "" 
       untracked int32 nMaxPrintout = 0
     }

     module ecalMonitorModule = EcalBarrelMonitorModule{
       InputTag EcalTBEventHeader = ecalEBunpacker:
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EBDigiCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
       untracked bool enableMonitorDaemon = false
     }

     module ecalOccupancyTask = EBOccupancyTask{
       InputTag EBDigiCollection = ecalEBunpacker:
       InputTag EcalPnDiodeDigiCollection = ecalEBunpacker:
     }
     module ecalIntegrityTask = EBIntegrityTask{
       InputTag EBDetIdCollection0 = ecalEBunpacker:EcalIntegrityDCCSizeErrors
       InputTag EBDetIdCollection1 = ecalEBunpacker:EcalIntegrityGainErrors
       InputTag EBDetIdCollection2 = ecalEBunpacker:EcalIntegrityChIdErrors
       InputTag EBDetIdCollection3 = ecalEBunpacker:EcalIntegrityGainSwitchErrors
       InputTag EBDetIdCollection4 = ecalEBunpacker:EcalIntegrityGainSwitchStayErrors
       InputTag EcalTrigTowerDetIdCollection1 = ecalEBunpacker:EcalIntegrityTTIdErrors
       InputTag EcalTrigTowerDetIdCollection2 = ecalEBunpacker:EcalIntegrityBlockSizeErrors
       InputTag EcalElectronicsIdCollection1 = ecalEBunpacker:EcalIntegrityMemTtIdErrors
       InputTag EcalElectronicsIdCollection2 = ecalEBunpacker:EcalIntegrityMemBlockSize
       InputTag EcalElectronicsIdCollection3 = ecalEBunpacker:EcalIntegrityMemChIdErrors
       InputTag EcalElectronicsIdCollection4 = ecalEBunpacker:EcalIntegrityMemGainErrors
     }
     module ecalCosmicTask = EBCosmicTask{
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EcalRecHitCollection = ecalRecHitMaker:EcalRecHitsEB
     }
     module ecalLaserTask = EBLaserTask{
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EBDigiCollection = ecalEBunpacker:
       InputTag EcalPnDiodeDigiCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }
     module ecalPedestalOnlineTask = EBPedestalOnlineTask{
       InputTag EBDigiCollection = ecalEBunpacker:
     }
     module ecalPedestalTask = EBPedestalTask{
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EBDigiCollection = ecalEBunpacker:
       InputTag EcalPnDiodeDigiCollection = ecalEBunpacker:
     }
     module ecalTestPulseTask = EBTestPulseTask{
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EBDigiCollection = ecalEBunpacker:
       InputTag EcalPnDiodeDigiCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }
     module ecalTriggerTowerTask = EBTriggerTowerTask{
       InputTag EcalTrigPrimDigiCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }
     module ecalTimingTask = EBTimingTask{
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }

     module ecalBeamHodoTask = EBBeamHodoTask{
       InputTag EcalTBEventHeader = ecalEBunpacker:
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
       InputTag EcalTBHodoscopeRawInfo = ecalEBunpacker:
       InputTag EcalTBTDCRawInfo = ecalEBunpacker:
       InputTag EcalTBTDCRecInfo = tdcReco:EcalTBTDCRecInfo
       InputTag EcalTBHodoscopeRecInfo = hodoscopeReco:EcalTBHodoscopeRecInfo
     }
     module ecalBeamCaloTask = EBBeamCaloTask{
       InputTag EcalTBEventHeader = ecalEBunpacker:
       InputTag EcalRawDataCollection = ecalEBunpacker:
       InputTag EBDigiCollection = ecalEBunpacker:
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }

     module ecalMonitorClient = EcalBarrelMonitorClient{
       untracked string location = "H4B"
       untracked string baseHtmlDir = "."
       untracked bool enableTCC = true
       untracked bool enableMonitorDaemon = false
       untracked string prefixME = ""
       untracked vint32 superModules = { 01 }
     }
     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     sequence s1 = { preScaler, ecalEBunpacker,
                     hodoscopeReco, tdcReco,
                     ecalUncalibHitMaker, ecalRecHitMaker }

     sequence s2 = { ecalMonitorModule,
                     ecalMonitorClient }

     sequence s3 = { ecalLaserTask, ecalOccupancyTask,
                     ecalIntegrityTask,
                     ecalCosmicTask,
                     ecalPedestalOnlineTask, ecalPedestalTask,
                     ecalTestPulseTask,
                     ecalTriggerTowerTask,
                     ecalBeamHodoTask, ecalBeamCaloTask }

     path p = { s1, s2 }
     endpath q = { s3 }

     service = LockService{ }
     source = PoolSource{
       untracked int32 maxEvents = 150
# replace /tmp with the path to your file
       untracked vstring fileNames = { 'file:/tmp/h4b.00014790.A.0.0.root' }
       untracked uint32 debugVebosity = 10
       untracked bool   debugFlag     = true
     }

     es_source src1 = EcalTrivialConditionRetriever{
       untracked bool producedEcalWeights = false
     }

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi",
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiGainSwitch",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalBarrelMonitor"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                        = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService             = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi                = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg             = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks  = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId         = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainSwitch      = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize    = { untracked int32 limit = 1000 }
         untracked PSet EcalBarrelMonitor              = { untracked int32 limit = 0 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

}

