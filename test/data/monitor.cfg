process MONITOR = { 

     module ecalEBunpacker = EcalDCCUnpackingModule{ }

     module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer{
#     module ecalUncalibHitMaker = EcalAnalFitUncalibRecHitProducer{
       string digiProducer   = "ecalEBunpacker"
       string EBdigiCollection = ""
       string EEdigiCollection = ""
       string EBhitCollection  = "EcalUncalibRecHitsEB"
       string EEhitCollection  = ""
       untracked int32 nMaxPrintout = 0
     }

     module ecalRecHitMaker = EcalRecHitProducer{
       string uncalibRecHitProducer = "ecalUncalibHitMaker"
       string EBuncalibRecHitCollection = "EcalUncalibRecHitsEB"
       string EEuncalibRecHitCollection = ""
       string EBrechitCollection = "EcalRecHitsEB"
       string EErechitCollection = ""
       untracked int32 nMaxPrintout = 0
     }

     module ecalMonitorModule = EcalBarrelMonitorModule{
#       untracked string outputFile = 'EcalBarrelMonitorModule.root'
#       untracked bool verbose = true
#       untracked bool enableMonitorDaemon = false
#       untracked bool enableEventDisplay = true
#       untracked string runType = 'COSMIC'
#       untracked string runType = 'LASER'
       untracked string runType = 'PEDESTAL'
#       untracked string runType = 'TEST_PULSE'
        untracked int32 runNumber = 000006100
     }

     module ecalOccupancyTask = EBOccupancyTask{ }
     module ecalIntegrityTask = EBIntegrityTask{ }
     module ecalCosmicTask = EBCosmicTask{ }
     module ecalBeamTask = EBBeamTask{ }
     module ecalLaserTask = EBLaserTask{ }
     module ecalPedestalOnlineTask = EBPedestalOnlineTask{ }
     module ecalPedestalTask = EBPedestalTask{ } 
     module ecalTestPulseTask = EBTestPulseTask{ }

     path p = { ecalEBunpacker,
                ecalUncalibHitMaker, ecalRecHitMaker,
                ecalMonitorModule,
                ecalOccupancyTask,
                ecalIntegrityTask,
                ecalCosmicTask, ecalBeamTask,
                ecalLaserTask,
                ecalPedestalOnlineTask, ecalPedestalTask,
                ecalTestPulseTask }

     source = DAQEcalTBInputService{ 
#       untracked int32 maxEvents = 150
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000006100-SM5-COSMIC-STD' }
#       untracked bool isBinary = false
#--
#       untracked vstring fileNames = { 'file:/tmp/H4-000006187-SM5-LASER-STD' }
#       untracked bool isBinary = false
#---
       untracked vstring fileNames = { 'file:/tmp/H4-000008203-SM5-PEDESTAL-STD' }
       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000008205-SM5-TEST_PULSE-MGPA' }
#       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000008206-SM5-COSMIC-STD' }
#       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000015188-SM5-COSMIC-STD' }
#       untracked bool isBinary = true
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000015292-SM5-LASER-STD' }
#       untracked bool isBinary = true
     }

     es_source = EcalTrivialConditionRetriever{ }
#     es_source = PoolDBESSource{ VPSet toGet = {
#                                         { string record = "EcalPedestalsRcd"
#                                           string tag = "EcalPedestals_2008_test"},
#                                         { string record = "EcalWeightRecAlgoWeightsRcd"
#                                           string tag = "EcalWeightRecAlgoWeights_h4_sm5"}
#                                       }
#       bool loadAll = true
#       string connect = "sqlite_file:ecalcalib.db"
#       string timetype = "runnumber"
#     }

     service = MessageLogger{
       vstring destinations = { "cout" }
#       vstring debugModules = { "ecalEBunpacker" }
#       vstring debugModules = { "ecalMonitorModule" }
#       vstring debugModules = { "*" }
       vstring categories = { "EcalTBInputService",
                              "EcalBarrelMonitor"
                            }
       PSet cout = { string threshold = "INFO"
                     PSet default = { int32 limit = 0 }
                     PSet EcalTBInputService = { int32 limit = 0 }
                     PSet EcalBarrelMonitor = { int32 limit = 10 }
                     bool noTimeStamps = true
                     bool noLineBreaks = true
                   }
     }

     service = DaqMonitorROOTBackEnd{ }

     service = MonitorDaemon{
       # if true, will automatically start DQM thread in background
       # (default: false)
       untracked bool AutoInstantiate = true

       # if >=0, upon a connection problem, the source will automatically 
       # attempt to reconnect with a time delay (secs) specified here 
       # (default: 5)
       untracked int32 reconnect_delay = 5

       # collector hostname
       # (default: localhost)
       untracked string DestinationAddress = "localhost"

       # port for communicating with collector
       # (default: 9090)
       untracked int32 SendPort = 9090

       # monitoring period in ms (i.e. how often monitoring elements 
       # are shipped to the collector
       # (default: 1000)
       untracked int32 UpdateDelay = 500

       # name of DQM source
       # (default: DQMSource)
       untracked string NameAsSource = "FU0"
     }

}
