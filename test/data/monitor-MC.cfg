process MONITOR = {

     module ecalUncalibHitMaker = EcalFixedAlphaBetaFitUncalibRecHitProducer{
#     module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer{
#     module ecalUncalibHitMaker = EcalAnalFitUncalibRecHitProducer{
       InputTag EBdigiCollection = ecalDigis:ebDigis
       InputTag EEdigiCollection = ecalDigis:eeDigis
       string EBhitCollection  = "EcalUncalibRecHitsEB"
       string EEhitCollection  = "EcalUncalibRecHitsEE"
       untracked int32 nMaxPrintout = 0
     }

     module ecalRecHitMaker = EcalRecHitProducer{
       InputTag EBuncalibRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
       InputTag EEuncalibRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEE
       string EBrechitCollection = "EcalRecHitsEB"
       string EErechitCollection = "EcalRecHitsEE"
       untracked int32 nMaxPrintout = 0
     }

     module ecalMonitorModule = EcalBarrelMonitorModule{
       InputTag EcalTBEventHeader = NULL:
       InputTag EcalRawDataCollection = NULL:
       InputTag EBDigiCollection = ecalDigis:ebDigis
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
#       untracked string outputFile = 'EcalBarrelMonitorModule.root'
#       untracked bool verbose = true
       untracked bool enableMonitorDaemon = false
#       untracked bool enableEventDisplay = true
        untracked int32 runType = 3 # MTCC/PHYSICS
     }

     module ecalOccupancyTask = EBOccupancyTask{
       InputTag EBDigiCollection = ecalDigis:ebDigis
       InputTag EcalPnDiodeDigiCollection = NULL:
     }
     module ecalIntegrityTask = EBIntegrityTask{
       InputTag EBDetIdCollection0 = NULL:EcalIntegrityDCCSizeErrors
       InputTag EBDetIdCollection1 = NULL:EcalIntegrityGainErrors
       InputTag EBDetIdCollection2 = NULL:EcalIntegrityChIdErrors
       InputTag EBDetIdCollection3 = NULL:EcalIntegrityGainSwitchErrors
       InputTag EBDetIdCollection4 = NULL:EcalIntegrityGainSwitchStayErrors
       InputTag EcalTrigTowerDetIdCollection1 = NULL:EcalIntegrityTTIdErrors
       InputTag EcalTrigTowerDetIdCollection2 = NULL:EcalIntegrityBlockSizeErrors
       InputTag EcalElectronicsIdCollection1 = NULL:EcalIntegrityMemTtIdErrors
       InputTag EcalElectronicsIdCollection2 = NULL:EcalIntegrityMemBlockSize
       InputTag EcalElectronicsIdCollection3 = NULL:EcalIntegrityMemChIdErrors
       InputTag EcalElectronicsIdCollection4 = NULL:EcalIntegrityMemGainErrors
     }
     module ecalPedestalOnlineTask = EBPedestalOnlineTask{
       InputTag EBDigiCollection = ecalDigis:ebDigis
     }
     module ecalTriggerTowerTask = EBTriggerTowerTask{
       InputTag EcalTrigPrimDigiCollection = ecalDigis:ecalTriggerPrimitiveDigis
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }
     module ecalTimingTask = EBTimingTask{
       InputTag EcalUncalibratedRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
     }
     module ecalClusterTask = EBClusterTask{ 
       string islandBarrelBasicClusterProducer   = "islandBasicClusters"
       string islandBarrelBasicClusterCollection = "islandBarrelBasicClusters"
       string islandBarrelBasicClusterShapes     = "islandBarrelShape"
       string islandBarrelSuperClusterCollection = "islandBarrelSuperClusters"
       string islandBarrelSuperClusterProducer   = "islandSuperClusters"
       string hybridSuperClusterProducer   = "hybridSuperClusters"
       string hybridSuperClusterCollection = ""
       InputTag hybridBarrelClusterShapeAssociation = hybridSuperClusters:hybridShapeAssoc
     }

     module ecalMonitorClient = EcalBarrelMonitorClient{
#       untracked string outputFile = 'EcalBarrelMonitorClient.root'
#       untracked string dbName = ""
#       untracked string dbHostName = ""
#       untracked int32 dbHostPort = 1521
#       untracked string dbUserName = ""
#       untracked string dbPassword = ""
#       untracked string maskFile = "maskfile.dat"
       untracked string location = "H4"
       untracked string baseHtmlDir = "."
#       untracked bool collateSources = true
#       untracked bool cloneME = false
#       untracked bool enableQT = false
#       untracked bool enableSubRun = true
#       untracked bool enableTCC = true
       untracked bool enableCluster = true
#       untracked bool enableExit = false 
       untracked bool enableMonitorDaemon = false
       untracked string prefixME = ""
#       untracked string prefixME = "Collector/FU0/"
#       untracked string prefixME = "EvF/FU0/"
#       untracked bool enableServer = true
#       untracked int32 serverPort = 9900
#       untracked bool verbose = true
#       untracked vint32 superModules = { 01 }
     }

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     sequence s1 = { preScaler,
                     ecalUncalibHitMaker, ecalRecHitMaker }

     sequence s2 = { ecalMonitorModule,
                     ecalMonitorClient }

     sequence s3 = { ecalOccupancyTask,
                     ecalIntegrityTask,
                     ecalPedestalOnlineTask,
                     ecalTriggerTowerTask,
                     ecalTimingTask,
                     ecalClusterTask }

     include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
     include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

     include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"

     replace islandBasicClusters.barrelHitProducer = "ecalRecHitMaker"
     replace islandBasicClusters.endcapHitProducer = "ecalRecHitMaker"

     replace correctedIslandBarrelSuperClusters.recHitProducer = "ecalRecHitMaker"
     replace correctedIslandEndcapSuperClusters.recHitProducer = "ecalRecHitMaker"

     replace hybridSuperClusters.ecalhitproducer = "ecalRecHitMaker"

     replace correctedHybridSuperClusters.recHitProducer = "ecalRecHitMaker"

     sequence s4 = { islandBasicClusters, islandSuperClusters, hybridSuperClusters }

     path p = { s1, s4, s2 }
     endpath q = { s3 }

#     service = LockService{ }
     source = PoolSource {
       untracked int32 maxEvents = 200
       untracked vstring fileNames = { 'file:/tmp/7C8A11F2-3BAF-DB11-8213-00188B79A34B.root' }
       untracked uint32 debugVebosity = 10
       untracked bool   debugFlag     = true
     }

     es_source = EcalTrivialConditionRetriever{
       untracked double adcToGeVEBConstant = 0.035
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
                                          0.000,  1.320, -0.050,
                                         -0.500, -0.500, -0.400,  0.000 }
     }

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi", 
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiGainSwitch",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalBarrelMonitor"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                        = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService             = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi                = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg             = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks  = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId         = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainSwitch      = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize    = { untracked int32 limit = 1000 }
         untracked PSet EcalBarrelMonitor              = { untracked int32 limit = 0 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

}
