
process ECALDQM = { 

     module ecalEBunpacker = EcalDCCUnpackingModule{ }

     module tdcReco = EcalTBTDCRecInfoProducer{
       string rawInfoProducer   = "ecalEBunpacker"
       string rawInfoCollection = ""
       string eventHeaderProducer   = "ecalEBunpacker"
       string eventHeaderCollection = ""
       string recInfoCollection  = "EcalTBTDCRecInfo"
       untracked bool use2004OffsetConvention = false
       int32 fitMethod = 0
       vint32 tdcMin = { 747 ,  400,  400,  400,  400 }
       vint32 tdcMax = { 1009 ,  927,  927,  927,  927 }
     }

     module hodoscopeReco = EcalTBHodoscopeRecInfoProducer{
       string rawInfoProducer   = "ecalEBunpacker"
       string rawInfoCollection = ""
       string recInfoCollection  = "EcalTBHodoscopeRecInfo"
       int32 fitMethod = 0
       vdouble planeShift = { 0.0, 0.0, 0.4633, 0.1000 }
       vdouble zPosition = { -3251.0, -2881.0, -751.0, -381.0 }
     }

     module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer {
       string digiProducer   = "ecalEBunpacker"
       string EBdigiCollection = ""
       string EEdigiCollection = ""
       string EBhitCollection  = "EcalUncalibRecHitsEB"
       string EEhitCollection  = ""
       untracked int32 nMaxPrintout = 0
     }

#     module ecalUncalibHitMaker = EcalTBWeightUncalibRecHitProducer{
#       string digiProducer   = "ecalEBunpacker"
#       string EBdigiCollection = ""
#       string EBhitCollection  = "EcalUncalibRecHitsEB"
#       string tdcRecInfoProducer = "tdcReco"
#       string tdcRecInfoCollection = "EcalTBTDCRecInfo"
#       int32 nbTimeBin = 25
#       untracked int32 nMaxPrintout = 0
#     }

     module ecalRecHitMaker = EcalRecHitProducer{
       string uncalibRecHitProducer = "ecalUncalibHitMaker"
       string EBuncalibRecHitCollection = "EcalUncalibRecHitsEB"
       string EEuncalibRecHitCollection = ""
       string EBrechitCollection = "EcalRecHitsEB" 
       string EErechitCollection = "" 
       untracked int32 nMaxPrintout = 0
     }

     module ecalMonitorModule = EcalBarrelMonitorModule{
       untracked bool enableMonitorDaemon = false
#       untracked bool enableEventDisplay = true
     }

     module ecalOccupancyTask = EBOccupancyTask{ }
     module ecalIntegrityTask = EBIntegrityTask{ }
     module ecalCosmicTask = EBCosmicTask{ }
     module ecalLaserTask = EBLaserTask{ }
     module ecalPedestalOnlineTask = EBPedestalOnlineTask{ }
     module ecalPedestalTask = EBPedestalTask{ } 
     module ecalTestPulseTask = EBTestPulseTask{ }
     module ecalTriggerTowerTask = EBTriggerTowerTask{ }

     module ecalBeamHodoTask = EBBeamHodoTask{ }
     module ecalBeamCaloTask = EBBeamCaloTask{
       string digiProducer ='ecalEBunpacker'
     }

     module ecalMonitorClient = EcalBarrelMonitorClient{
#       untracked string dbName = "ecalh4db"
#       untracked string dbHostName = "pccmsecdb.cern.ch"
#       untracked int32 dbHostPort = 1521
#       untracked string dbUserName = "cond01"
#       untracked string dbPassword = "oracond01"
#       untracked string maskFile = "list.mask"
       untracked string location = "H4B"
       untracked string baseHtmlDir = "."
#       untracked bool collateSources = true
#       untracked bool cloneME = false
#       untracked bool enableQT = false
#       untracked bool enableSubRun = true
       untracked bool enableTCC = true
#       untracked bool enableExit = false
       untracked bool enableMonitorDaemon = false
       untracked string prefixME = ""
#       untracked string prefixME = "Collector/FU0/"
#       untracked string prefixME = "EVF/FU0/"
#       untracked bool enableServer = true
#       untracked int32 serverPort = 9900
#       untracked bool verbose = true
       untracked vint32 superModules = { 01 }
     }
     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     sequence s1 = { preScaler, ecalEBunpacker,
                     hodoscopeReco, tdcReco,
                     ecalUncalibHitMaker, ecalRecHitMaker }

     sequence s2 = { ecalMonitorModule,
                     ecalMonitorClient }

     sequence s3 = { ecalLaserTask, ecalOccupancyTask,
                     ecalIntegrityTask,
                     ecalCosmicTask,
                     ecalPedestalOnlineTask, ecalPedestalTask,
                     ecalTestPulseTask,
                     ecalTriggerTowerTask,
                     ecalBeamHodoTask, ecalBeamCaloTask }

     path p = { s1, s2, s3 }

     source = PoolSource{
#       untracked int32 maxEvents = 150
       untracked vstring fileNames = { 'file:/cms/users/dellaric/work/cms/h4data/h4b.00011672.A.0.0.root' }
       untracked uint32 debugVebosity = 10
       untracked bool   debugFlag     = true
     }

     es_source = EcalTrivialConditionRetriever{
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
                                          0.000,  1.320, -0.050,
                                         -0.500, -0.500, -0.400,  0.000 }
     }

     service = MessageLogger{
       untracked vstring destinations = { "cout" } 
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalBarrelMonitor",
                                        "EBCosmicTask",
                                        "EBIntegrityTask",
                                        "EBLaserTask",
                                        "EBOccupancyTask",
                                        "EBPedestalOnlineTask",
                                        "EBPedestalTask",
                                        "EBTestPulseTask",
                                        "EBTriggerTowerTask",
                                        "EBBeamHodoTask",
                                        "EBBeamCaloTask"
                                       }
       untracked PSet cout = { untracked string threshold = "INFO"
                               untracked PSet default = { untracked int32 limit = 0 }
                               untracked PSet EcalTBInputService = { untracked int32 limit = 1000000 }
                               untracked PSet EcalBarrelMonitor = { untracked int32 limit = 10 }
                               untracked PSet EBCosmicTask = { untracked int32 limit = 10 }
                               untracked PSet EBIntegrityTask = { untracked int32 limit = 10 }
                               untracked PSet EBLaserTask = { untracked int32 limit = 10 }
                               untracked PSet EBOccupancyTask = { untracked int32 limit = 10 }
                               untracked PSet EBPedestalOnlineTask = { untracked int32 limit = 10 }
                               untracked PSet EBPedestalTask = { untracked int32 limit = 10 }
                               untracked PSet EBTestPulseTask = { untracked int32 limit = 10 }
                               untracked PSet EBTriggerTowerTask = { untracked int32 limit = 10 }
                               untracked PSet EBBeamHodoTask = { untracked int32 limit = 10 }
                               untracked PSet EBBeamCaloTask = { untracked int32 limit = 10 }
                               untracked bool noTimeStamps = true
                               untracked bool noLineBreaks = true
                             }
     }

     service = DaqMonitorROOTBackEnd{ }

}

