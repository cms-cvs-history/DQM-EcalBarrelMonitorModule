process MONITOR = { 

################################ reco 

# CMS synchronous weights algo
#  module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer{
#       string digiProducer   = "Ecal2004TBSource"
#       string EBdigiCollection = ""
#       string EEdigiCollection = ""
#       string EBhitCollection  = "EcalUncalibRecHitsEB"
#       string EEhitCollection  = ""
#       untracked int32 nMaxPrintout = 0
#    }

# test beam synchronous weights algo -  uncalibrated rechit producer
  module ecalUncalibHitMaker = EcalTBWeightUncalibRecHitProducer {
   string digiProducer   = "Ecal2004TBSource"
   string EBdigiCollection = ""
   string tdcRecInfoProducer   = "tdcReco"
   string tdcRecInfoCollection = "EcalTBTDCRecInfo"
   string EBhitCollection  = "EcalUncalibRecHitsEB"
   int32  nbTimeBin=25
  }


#    module ecalRecHitMaker = EcalRecHitProducer{
#       string uncalibRecHitProducer = "ecalUncalibHitMaker"
#       string EBuncalibRecHitCollection = "EcalUncalibRecHitsEB"
#       string EEuncalibRecHitCollection = ""
#       string EBrechitCollection = "EcalRecHitsEB"
#       string EErechitCollection = ""
#       untracked int32 nMaxPrintout = 0
#   }


################################ DQM

module ecalMonitorModule = EcalBarrelMonitorModule{
       untracked string outputFile = 'EcalBarrelMonitorModule.root'
#       untracked bool verbose = true
       untracked bool enableMonitorDaemon = false
#       untracked bool enableEventDisplay = true
#       untracked string runType = 'COSMIC'
#       untracked string runType = 'LASER'
#       untracked string runType = 'PEDESTAL'
       untracked string runType = 'ELECTRON'
        untracked int32 runNumber = 000006100
   }

module ecalOccupancyTask = EBOccupancyTask{ }
#     module ecalIntegrityTask = EBIntegrityTask{ }
#     module ecalCosmicTask = EBCosmicTask{ }
     module ecalBeamHodoTask = EBBeamHodoTask{ }
#     module ecalLaserTask = EBLaserTask{ }
#     module ecalPedestalOnlineTask = EBPedestalOnlineTask{ }
#     module ecalPedestalTask = EBPedestalTask{ } 
#     module ecalTestPulseTask = EBTestPulseTask{ }

     module ecalMonitorClient = EcalBarrelMonitorClient{
#       untracked string outputFile = 'EcalBarrelMonitorClient.root'
#       untracked string dbName = "ecalh4db"
#       untracked string dbHostName = "pccmsecdb.cern.ch"
#       untracked string dbUserName = "test06"
#       untracked string dbPassword = "oratest06"
       untracked string location = "H4"
       untracked string baseHtmlDir = "."
#       untracked bool collateSources = true
       untracked bool cloneME = false
#       untracked bool enableSubRun = true
#       untracked bool enableExit = false
       untracked bool enableMonitorDaemon = false
#       untracked bool verbose = true
     }


################################ path
     path p = {  
                 get,
                 ecalUncalibHitMaker,
                 hodoscopeReco,
                 tdcReco,
                 ecalMonitorModule,
                 ecalBeamHodoTask,
                 ecalOccupancyTask,
                 ecalMonitorClient
                 }


	source = Ecal2004TBSource { 
#		untracked vstring fileNames = { 'rfio:/castor/cern.ch/cms/testbeam/tbh4/2004RawRoot/ecs73276' }
		untracked vstring fileNames = { 'file:/localdisk/franzoni/data/ecs73276' }
		untracked int32 maxEvents = 1000
	}

################################ beam data
# Hodoscope Reconstruction
 include "RecoTBCalo/EcalTBHodoscopeReconstructor/data/EcalTBHodoscopeReconstructor.cfi"

# TDC Reconstruction
 include "RecoTBCalo/EcalTBTDCReconstructor/data/EcalTBTDCReconstructor.cfi"


################################ simple conditions
# for some simple promptly accessible conditions and weights
#es_source = EcalTrivialConditionRetriever{ }


################################ full conditions
es_source = PoolDBESSource { VPSet toGet = {
                                {string record = "EcalPedestalsRcd"
                                 string tag = "EcalPedestals"},
                                {string record = "EcalTBWeightsRcd"
                                 string tag = "EcalTBWeights"},
                                {string record = "EcalGainRatiosRcd"
                                 string tag = "EcalGainRatios"
                                },
#                               {string record = "EcalIntercalibConstantsRcd"
#                                 string tag = "EcalIntercalibConstants"
#                                },
#                                {string record = "EcalADCToGeVConstantRcd"
#                                 string tag = "EcalADCToGeVConstant"
#                                },
                                {string record = "EcalWeightXtalGroupsRcd"
                                 string tag = "EcalWeightXtalGroups"}
                               }
                               bool loadAll = true
                               string connect = "sqlite_file:/afs/cern.ch/cms/ECAL/testbeam/pedestal/2004/ecal2004condDB.db"
                               untracked string catalog = "file:/afs/cern.ch/cms/ECAL/testbeam/pedestal/2004/PoolFileCatalog.xml"
                               string timetype = "runnumber"
                              untracked uint32 authenticationMethod = 0
                             untracked uint32 messagelevel = 1
          }

 module get = EventSetupRecordDataGetter { VPSet toGet =
        {
               {string record = "EcalPedestalsRcd"
                vstring data = {"EcalPedestals"} },
                {string record = "EcalTBWeightsRcd"
                vstring data = {"EcalTBWeights"} },
                {string record = "EcalGainRatiosRcd"
                 vstring data  = {"EcalGainRatios"}
                },
#                {string record = "EcalIntercalibConstantsRcd"
#                 vstring data  = {"EcalIntercalibConstants"}
#                },
#                {string record = "EcalADCToGeVConstantRcd"
#                 vstring data  = {"EcalADCToGeVConstant"}
#                },
                {string record = "EcalWeightXtalGroupsRcd"
                vstring data = {"EcalWeightXtalGroups"} }
       }
               untracked bool verbose = true
        }



################################ logs
     service = MessageLogger{
       vstring destinations = { "cout" }
#       vstring debugModules = { "ecalEBunpacker" }
#       vstring debugModules = { "ecalMonitorModule" }
       vstring debugModules = { "*" }
       vstring categories = { "EcalTBInputService",
                              "EcalBarrelMonitor"
                            }
       PSet cout = { string threshold = "DEBUG"
                     PSet default = { int32 limit = 1 }
                     PSet EcalTBInputService = { int32 limit = 10 }
                     PSet EcalBarrelMonitorModule = { int32 limit = 10 }
                     bool noTimeStamps = true
                     bool noLineBreaks = true
                   }
     }

     service = DaqMonitorROOTBackEnd{ }


}
