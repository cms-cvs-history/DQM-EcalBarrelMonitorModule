process MONITOR = { 

################################ reco 

# CMS synchronous weights algo
  module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer{
       string digiProducer     = "source"
       string EBdigiCollection = ""
       string EEdigiCollection = ""
       string EBhitCollection  = "EcalUncalibRecHitsEB"
       string EEhitCollection  = ""
       untracked int32 nMaxPrintout = 0
    }

# test beam synchronous weights algo -  uncalibrated rechit producer
#  module ecalUncalibHitMaker = EcalTBWeightUncalibRecHitProducer {
#   string digiProducer     = "source"
#   string EBdigiCollection = ""
#   string tdcRecInfoProducer   = "tdcReco"
#   string tdcRecInfoCollection = "EcalTBTDCRecInfo"
#   string EBhitCollection  = "EcalUncalibRecHitsEB"
#   int32  nbTimeBin=25
#  }


#    module ecalRecHitMaker = EcalRecHitProducer{
#       string uncalibRecHitProducer = "ecalUncalibHitMaker"
#       string EBuncalibRecHitCollection = "EcalUncalibRecHitsEB"
#       string EEuncalibRecHitCollection = ""
#       string EBrechitCollection = "EcalRecHitsEB"
#       string EErechitCollection = ""
#       untracked int32 nMaxPrintout = 0
#   }


################################ DQM

module ecalMonitorModule = EcalBarrelMonitorModule{
       untracked string outputFile = 'EcalBarrelMonitorModule.root'
#       untracked bool verbose = true
       untracked bool enableMonitorDaemon = false
#       untracked bool enableEventDisplay = true
        untracked int32 runNumber = 6100
   }

module ecalOccupancyTask = EBOccupancyTask{ }
#     module ecalIntegrityTask = EBIntegrityTask{ }
#     module ecalCosmicTask = EBCosmicTask{ }
     module ecalBeamHodoTask = EBBeamHodoTask{ }
     module ecalBeamCaloTask =  EBBeamCaloTask{  string digiProducer ='source'  }
#     module ecalLaserTask = EBLaserTask{ }
#     module ecalPedestalOnlineTask = EBPedestalOnlineTask{ }
#     module ecalPedestalTask = EBPedestalTask{ } 
#     module ecalTestPulseTask = EBTestPulseTask{ }

     module ecalMonitorClient = EcalBarrelMonitorClient{
#       untracked string outputFile = 'EcalBarrelMonitorClient.root'
#       untracked string dbName = ""
#       untracked string dbHostName = ""
#       untracked int32 dbHostPort = 1521
#       untracked string dbUserName = ""
#       untracked string dbPassword = ""
       untracked string location = "H4"
       untracked string baseHtmlDir = "."
#       untracked bool collateSources = true
#       untracked bool cloneME = false
#       untracked bool enableSubRun = true
#       untracked bool enableTCC = true
#       untracked bool enableExit = false
       untracked bool enableMonitorDaemon = false
       untracked string prefixME = ""
#       untracked string prefixME = "Collector/FU0/"
#       untracked string prefixME = "EvF/FU0/"
#       untracked bool enableServer = true
#       untracked int32 serverPort = 9900
#       untracked bool verbose = true
       untracked vint32 superModules = { 01 }
     }


################################ path

     sequence s1 = {  
#                     get,
                     ecalUncalibHitMaker,
                     hodoscopeReco,
                     tdcReco
                   }

     sequence s2 = {
                     ecalMonitorModule,
                     ecalMonitorClient
                   }

     sequence s3 = {
                     ecalBeamHodoTask,
                     ecalBeamCaloTask,
                     ecalOccupancyTask
                   }

     path p = { s1, s2, s3 }

	source = Ecal2004TBSource { 
#		untracked vstring fileNames = { 'rfio:/castor/cern.ch/cms/testbeam/tbh4/2004RawRoot/ecs73276' }
		untracked vstring fileNames = { 'file:/localdisk/franzoni/data/ecs73276' }
		untracked int32 maxEvents = 10
	}

################################ beam data
# Hodoscope Reconstruction
 include "RecoTBCalo/EcalTBHodoscopeReconstructor/data/EcalTBHodoscopeReconstructor.cfi"

# TDC Reconstruction
 include "RecoTBCalo/EcalTBTDCReconstructor/data/EcalTBTDCReconstructor.cfi"


################################ simple conditions
# for some simple promptly accessible conditions and weights
     es_source = EcalTrivialConditionRetriever{
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
                                          0.000,  1.320, -0.050,
                                         -0.500, -0.500, -0.400,  0.000 }
     }

################################ full conditions
#es_source = PoolDBESSource { VPSet toGet = {
#                                {string record = "EcalPedestalsRcd"
#                                 string tag = "EcalPedestals"},
#                                {string record = "EcalTBWeightsRcd"
#                                 string tag = "EcalTBWeights"},
#                                {string record = "EcalGainRatiosRcd"
#                                 string tag = "EcalGainRatios"
#                                },
##                               {string record = "EcalIntercalibConstantsRcd"
##                                 string tag = "EcalIntercalibConstants"
##                                },
##                                {string record = "EcalADCToGeVConstantRcd"
##                                 string tag = "EcalADCToGeVConstant"
##                                },
#                                {string record = "EcalWeightXtalGroupsRcd"
#                                 string tag = "EcalWeightXtalGroups"}
#                               }
#                               bool loadAll = true
#                               string connect = "sqlite_file:/afs/cern.ch/cms/ECAL/testbeam/pedestal/2004/ecal2004condDB.db"
#                               untracked string catalog = "file:/afs/cern.ch/cms/ECAL/testbeam/pedestal/2004/PoolFileCatalog.xml"
#                               string timetype = "runnumber"
#                              untracked uint32 authenticationMethod = 0
#                             untracked uint32 messagelevel = 1
#          }

# module get = EventSetupRecordDataGetter { VPSet toGet =
#        {
#               {string record = "EcalPedestalsRcd"
#                vstring data = {"EcalPedestals"} },
#                {string record = "EcalTBWeightsRcd"
#                vstring data = {"EcalTBWeights"} },
#                {string record = "EcalGainRatiosRcd"
#                 vstring data  = {"EcalGainRatios"}
#                },
##                {string record = "EcalIntercalibConstantsRcd"
##                 vstring data  = {"EcalIntercalibConstants"}
##                },
##                {string record = "EcalADCToGeVConstantRcd"
##                 vstring data  = {"EcalADCToGeVConstant"}
##                },
#                {string record = "EcalWeightXtalGroupsRcd"
#                vstring data = {"EcalWeightXtalGroups"} }
#       }
#               untracked bool verbose = true
#        }

################################ logs
     service = MessageLogger{
       untracked vstring destinations = { "cout" }
#       untracked vstring debugModules = { "ecalEBunpacker" }
#       untracked vstring debugModules = { "ecalMonitorModule" }
       untracked vstring debugModules = { "*" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalBarrelMonitor"
                                      }
       untracked PSet cout = { untracked string threshold = "DEBUG"
         untracked PSet default = { untracked int32 limit = 1 }
         untracked PSet EcalTBInputService = { untracked int32 limit = 10 }
         untracked PSet EcalBarrelMonitorModule = { untracked int32 limit = 10 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

}
