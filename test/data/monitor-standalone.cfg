process MONITOR = { 

     module ecalEBunpacker = EcalDCCUnpackingModule{ }

     module ecalUncalibHitMaker = EcalFixedAlphaBetaFitUncalibRecHitProducer{
#     module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer{
#     module ecalUncalibHitMaker = EcalAnalFitUncalibRecHitProducer{
       InputTag EBdigiCollection = ecalEBunpacker:
       InputTag EEdigiCollection = ecalEBunpacker:
       string EBhitCollection  = "EcalUncalibRecHitsEB"
       string EEhitCollection  = ""
       untracked int32 nMaxPrintout = 0
     }

     module ecalRecHitMaker = EcalRecHitProducer{
       InputTag EBuncalibRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEB
       InputTag EEuncalibRecHitCollection = ecalUncalibHitMaker:EcalUncalibRecHitsEE
       string EBrechitCollection = "EcalRecHitsEB"
       string EErechitCollection = ""
       untracked int32 nMaxPrintout = 0
     }

     module ecalMonitorModule = EcalBarrelMonitorModule{
#       untracked string outputFile = 'EcalBarrelMonitorModule.root'
#       untracked bool verbose = true
       untracked bool enableMonitorDaemon = false
#       untracked bool enableEventDisplay = true
        untracked int32 runNumber = 6100
     }

     module ecalOccupancyTask = EBOccupancyTask{ }
     module ecalIntegrityTask = EBIntegrityTask{ }
     module ecalCosmicTask = EBCosmicTask{ }
     module ecalLaserTask = EBLaserTask{ }
     module ecalPedestalOnlineTask = EBPedestalOnlineTask{ }
     module ecalPedestalTask = EBPedestalTask{ } 
     module ecalTestPulseTask = EBTestPulseTask{ }
     module ecalTriggerTowerTask = EBTriggerTowerTask{ }
     module ecalTimingTask = EBTimingTask{ }

     module ecalMonitorClient = EcalBarrelMonitorClient{
#       untracked string outputFile = 'EcalBarrelMonitorClient.root'
#       untracked string dbName = ""
#       untracked string dbHostName = ""
#       untracked int32 dbHostPort = 1521
#       untracked string dbUserName = ""
#       untracked string dbPassword = ""
#       untracked string maskFile = "maskfile.dat"
       untracked string location = "H4"
       untracked string baseHtmlDir = "."
#       untracked bool collateSources = true
#       untracked bool cloneME = false
#       untracked bool enableQT = false
#       untracked bool enableSubRun = true
       untracked bool enableTCC = true
#       untracked bool enableExit = false
       untracked bool enableMonitorDaemon = false
       untracked string prefixME = ""
#       untracked string prefixME = "Collector/FU0/"
#       untracked string prefixME = "EvF/FU0/"
       untracked bool enableServer = true
#       untracked int32 serverPort = 9900
#       untracked bool verbose = true
       untracked vint32 superModules = { 01 }
     }

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     sequence s1 = { preScaler, ecalEBunpacker,
                     ecalUncalibHitMaker, ecalRecHitMaker}

     sequence s2 = { ecalMonitorModule,
                     ecalMonitorClient }

     sequence s3 = { ecalOccupancyTask,
                     ecalIntegrityTask,
                     ecalCosmicTask,
                     ecalLaserTask,
                     ecalPedestalOnlineTask, ecalPedestalTask,
                     ecalTestPulseTask,
                     ecalTriggerTowerTask,
                     ecalTimingTask }

     path p = { s1, s2, s3 }

     source = DAQEcalTBInputService{ 
#       untracked int32 maxEvents = 150
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000006100-SM5-COSMIC-STD' }
#       untracked bool isBinary = false
#--
#       untracked vstring fileNames = { 'file:/tmp/H4-000006187-SM5-LASER-STD' }
#       untracked bool isBinary = false
#---
       untracked vstring fileNames = { 'file:/tmp/H4-000008203-SM5-PEDESTAL-STD' }
       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000008205-SM5-TEST_PULSE-MGPA' }
#       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000008206-SM5-COSMIC-STD' }
#       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000015188-SM5-COSMIC-STD' }
#       untracked bool isBinary = true
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000015292-SM5-LASER-STD' }
#       untracked bool isBinary = true
     }

     es_source = EcalTrivialConditionRetriever{
       untracked double adcToGeVEBConstant = 0.00875
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
                                          0.000,  1.320, -0.050,
                                         -0.500, -0.500, -0.400,  0.000 }
     }

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
#       untracked vstring debugModules = { "ecalEBunpacker" }
#       untracked vstring debugModules = { "ecalMonitorModule" }
#       untracked vstring debugModules = { "*" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalBarrelMonitor"
                                      }
       untracked PSet cout = { 
         untracked string threshold = "INFO"
         untracked PSet default = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService = { untracked int32 limit = 0 }
         untracked PSet EcalBarrelMonitor = { untracked int32 limit = 10 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

}
