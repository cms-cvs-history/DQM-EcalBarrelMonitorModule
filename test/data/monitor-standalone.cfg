process ECALDQM = { 

include "EventFilter/EcalTBRawToDigi/data/EcalUnpackerData.cfi"

#include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerMapping.cfi"
#     replace eegeom.firstValid = { 0 }
#include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerData.cfi"

#     replace ecalEBunpacker.FEDs = {13}
#     replace ecalEBunpacker.orderedFedList = {13}
#     replace ecalEBunpacker.orderedDCCIdList = {28}

     module ecalUncalibHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

     replace ecalUncalibHit.MinAmplBarrel = 12.
     replace ecalUncalibHit.MinAmplEndcap = 16.

#     module ecalUncalibHit = ecalWeightUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalWeightUncalibRecHit.cfi"

     replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:ebDigis
     replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:eeDigis

include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"

     replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
     replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE

include "DQM/EcalBarrelMonitorModule/data/EcalBarrelMonitorModule.cfi"

include "DQM/EcalBarrelMonitorTasks/data/EcalBarrelMonitorTasks.cfi"

include "DQM/EcalBarrelMonitorClient/data/EcalBarrelMonitorClient.cfi"

     replace ecalBarrelMonitorClient.maskFile = "maskfile.dat"
     replace ecalBarrelMonitorClient.location = "H4"
     replace ecalBarrelMonitorClient.baseHtmlDir = "."
     replace ecalBarrelMonitorClient.superModules = { 19 }

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     module dqmInfoEB = DQMEventInfo{
       untracked string subSystemFolder = "EcalBarrel"
     }

     module dqmQTestEB = QualityTester{
       untracked int32 prescaleFactor = 1
       untracked bool getQualityTestsFromFile = true
       untracked string qtList = "EcalBarrelQualityTests.xml"
       untracked string reportThreshold = "red"
     }

     module dqmSaverEB = DQMFileSaver{
       untracked string dirName = "."
       untracked string fileName = "EcalBarrel"
     }

include "FWCore/Modules/data/printContent.cfi"

     sequence ecalBarrelDataSequence = { preScaler,
                                         ecalEBunpacker,
                                         ecalUncalibHit,
                                         ecalRecHit }

     sequence ecalBarrelMonitorSequence = { ecalBarrelMonitorModule,
                                            dqmInfoEB,
                                            ecalBarrelMonitorClient,
                                            dqmQTestEB,
                                            dqmSaverEB }

     path p = { ecalBarrelDataSequence, ecalBarrelMonitorSequence }

     endpath q = { ecalBarrelCosmicTasksSequence }

     untracked PSet maxEvents = {untracked int32 input = 150}
     source = DAQEcalTBInputService{ 
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000006100-SM5-COSMIC-STD' }
#       untracked bool isBinary = false
#--
#       untracked vstring fileNames = { 'file:/tmp/H4-000006187-SM5-LASER-STD' }
#       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000008203-SM5-PEDESTAL-STD' }
#       untracked bool isBinary = false
#---
       untracked vstring fileNames = { 'file:/tmp/H4-000008205-SM5-TEST_PULSE-MGPA' }
       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000008206-SM5-COSMIC-STD' }
#       untracked bool isBinary = false
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000015188-SM5-COSMIC-STD' }
#       untracked bool isBinary = true
#---
#       untracked vstring fileNames = { 'file:/tmp/H4-000015292-SM5-LASER-STD' }
#       untracked bool isBinary = true
#---
     }

     es_source = EcalTrivialConditionRetriever{
       untracked double adcToGeVEBConstant = 0.00875 # 0.035
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.041,  0.041,  0.041,
                                          0.000,  1.325, -0.050,
                                         -0.504, -0.502, -0.390,  0.000 }
     }

include "CalibCalorimetry/EcalLaserCorrection/data/ecalLaserCorrectionService.cfi"

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi",
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiGainSwitch",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalRawToDigiDev",
                                        "EcalRawToDigiDevTriggerType",
                                        "EcalRawToDigiDevTpg",
                                        "EcalRawToDigiDevNumTowerBlocks",
                                        "EcalRawToDigiDevTowerId",
                                        "EcalRawToDigiDevTowerSize",
                                        "EcalRawToDigiDevChId",
                                        "EcalRawToDigiDevGainZero",
                                        "EcalRawToDigiDevGainSwitch",
                                        "EcalRawToDigiDevDccBlockSize",
                                        "EcalRawToDigiDevMemBlock",
                                        "EcalRawToDigiDevMemTowerId",
                                        "EcalRawToDigiDevMemChId",
                                        "EcalRawToDigiDevMemGain",
                                        "EcalRawToDigiDevTCC",
                                        "EcalRawToDigiDevSRP",
                                        "EcalDCCHeaderRuntypeDecoder",
                                        "EcalBarrelMonitorModule"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                        = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService             = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi                = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg             = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks  = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId         = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainSwitch      = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize    = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDev               = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTriggerType    = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTpg            = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevNumTowerBlocks = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTowerId        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTowerSize      = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevChId           = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevGainZero       = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevGainSwitch     = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevDccBlockSize   = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemBlock       = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemTowerId     = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemChId        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemGain        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTCC            = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevSRP            = { untracked int32 limit = 1000 }
         untracked PSet EcalDCCHeaderRuntypeDecoder    = { untracked int32 limit = 1000 }
         untracked PSet EcalBarrelMonitorModule        = { untracked int32 limit = 1000 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{
       untracked int32 verbose = 0
     }

}
